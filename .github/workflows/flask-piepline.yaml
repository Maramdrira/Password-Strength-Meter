name: Flask CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  # STAGE 1: Run Tests
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov
        
    - name: Run tests with pytest
      run: |
        python -m pytest tests/ --cov=password_strength_checker --cov-report=xml
        
    - name: Upload test coverage
      uses: codecov/codecov-action@v3

  # STAGE 2: Build Validation
  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install package and dependencies
      run: |
        pip install -e .
        pip install -r requirements.txt
        
    - name: Validate requirements
      run: pip check
    
    - name: Verify imports
      run: |
        python -c "from password_strength_checker import app, check_strength; print('All imports successful')"


  deploy:
    needs: build
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Login to Azure
        run: |
          az login --tenant ${{ secrets.AZURE_TENANT_ID }}
          az account set --subscription ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      
      - name: Create deployment package
        run: |
          # Create ZIP excluding unnecessary files
          zip -r deploy.zip . -x '.venv/*' -x '.git/*' -x '*.pyc' -x '__pycache__/*'
          
      - name: Configure app settings
        run: |
          az webapp config appsettings set \
            --name password-strength-checker \
            --resource-group flask-app-rg \
            --settings \
              SCM_DO_BUILD_DURING_DEPLOYMENT=true \
              WEBSITES_PORT=8000 \
              FLASK_APP=your_app_module_name:app  # Replace with your module name
              FLASK_ENV=production
      
      - name: Configure startup command
        run: |
          az webapp config set \
            --name password-strength-checker \
            --resource-group flask-app-rg \
            --linux-fx-version "PYTHON|3.11" \
            --startup-file "gunicorn --bind=0.0.0.0:8000 --workers=4 your_app_module_name:app"
      
      - name: Deploy to Azure
        run: |
          az webapp deploy \
            --name password-strength-checker \
            --resource-group flask-app-rg \
            --src-path ./deploy.zip \
            --type zip \
            --verbose