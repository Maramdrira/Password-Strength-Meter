name: Flask CI/CD Pipeline

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  AZURE_WEBAPP_NAME: 'password-strength-checker'
  AZURE_RESOURCE_GROUP: 'flask-app-rg'
  PYTHON_VERSION: '3.11'

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install package in development mode
      run: |
        python -m pip install --upgrade pip
        pip install -e .
        pip install -r requirements.txt
        pip install pytest pytest-cov

    - name: Verify test discovery
      run: |
        python -m pytest --collect-only tests/
        
    - name: Run tests with coverage
      run: |
        PYTHONPATH=$PYTHONPATH:${{ github.workspace }} \
        python -m pytest tests/ \
          --cov=password_strength_checker \
          --cov-report=xml \
          -v
      env:
        FLASK_APP: password_strength_checker.app
        TEMPLATES_FOLDER: ${{ github.workspace }}/templates

    - name: Upload coverage report
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: coverage.xml


  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install gunicorn

    - name: Create deployment package
      run: |
        zip -r deploy.zip \
          password_strength_checker \
          templates \
          static \
          requirements.txt \
          -x '*.pyc' '*__pycache__*'

    - name: Upload deployment package
      uses: actions/upload-artifact@v4
      with:
        name: deploy-package
        path: deploy.zip

  deploy:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write  # THIS IS CRUCIAL FOR AZURE LOGIN
    
    steps:
    - name: Download deployment package
      uses: actions/download-artifact@v4
      with:
        name: deploy-package

    - name: Login to Azure
      uses: azure/login@v1
      with:
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    - name: Deploy to Azure Web App
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        resource-group: ${{ env.AZURE_RESOURCE_GROUP }}
        package: deploy.zip


    - name: Verify deployment
      run: |
        echo "Deployment successful!"
        echo "App URL: https://${{ env.AZURE_WEBAPP_NAME }}.azurewebsites.net"




      
      